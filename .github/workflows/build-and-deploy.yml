name: Build, package and upload
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - uses: actions/setup-node@v1
        with:
          node-version: '12'  
      - name: Install gems
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Build web assets
        run: |
          yarn install
          yarn run build
        working-directory: _yarn
      - name: Build Jekyll
        run: bundle exec jekyll b
      - name: Upload site
        uses: actions/upload-artifact@v1
        with:
          name: site-dir
          path: _site/
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v1
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: site-dir
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: Install fpm and deb-s3
        env:
          BUNDLE_GEMFILE: Gemfile.deploy
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Get Build number
        uses: einaregilsson/build-number@v1
        with:
          token: ${{secrets.github_token}}
      - name: Make deb package
        env:
          BUNDLE_GEMFILE: Gemfile.deploy
        run: bundle exec fpm -s dir -t deb -n growse-com-jekyll --description "growse.com static content" --url https://www.growse.com/ --prefix /var/www/ -p site-dir -a noarch  -v 1.0.2-$BUILD_NUMBER site-dir/=growse-jekyll
      - name: Upload to S3 Apt repo
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEBSIGN: ${{ secrets.DEBSIGN }}
          BUNDLE_GEMFILE: Gemfile.deploy
        run: |
          echo 'aaaaaaaa' > passphrase_file
          echo $DEBSIGN | base64 -d | gpg --import --batch
          gpg --list-secret-keys
          bundle exec deb-s3 upload --s3-region=eu-north-1 --sign=6A2561804E290210909454E69640EFFBAA3B94A5 --gpg-options="\-\-pinentry\-mode=loopback \-\-passphrase\-file passphrase_file \-\-batch" --suite stable --origin "Andrew Rowson" --bucket apt.growse.com "site-dir/*.deb"
