name: Build, package and upload
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-site:
    name: Build Site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
        working-directory: blog/_yarn
      - uses: actions/cache@v3
        name: Yarn cache restore
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v3
        name: Ruby gems cache restore
        id: rubygems-cache
        with:
          path: blog/vendor/bundle
          key: ${{ runner.os }}-gems-v2-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-v2
      - uses: actions/cache@v3
        name: Go modules cache restore
        id: golang-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3
          bundler-cache: true
      - uses: actions/setup-node@v3
        with:
          node-version: "12"
      - name: Install gems
        working-directory: ./blog
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle
        env:
          BUNDLE_PATH: vendor/bundle
      - name: Build
        run: make blog/_site
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: blog/_site

  build-search-tools:
    runs-on: ubuntu-latest
    name: Build search tools
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v3
        name: Go modules cache restore
        id: golang-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: make searchIndexServer/search_server searchIndexServer/generate_index
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: searchIndexServer
          path: |
            searchIndexServer/generate_index
            searchIndexServer/search_server

  create-search-index:
    runs-on: ubuntu-latest
    name: Create search index
    needs:
      - build-search-tools
      - build-site
    steps:      
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Create Index
        run: chmod +x searchIndexServer/generate_index && ./searchIndexServer/generate_index
        env:
          SEARCH_INDEXROOT: site
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: searchIndex
          path: searchIndex
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build-search-tools
      - build-site
      - create-search-index
    steps:
      - name: Download site build artifact
        uses: actions/download-artifact@v3
        with:
          name: site
          path: blog/_site
      - name: Download searchTools build artifact
        uses: actions/download-artifact@v3
        with:
          name: searchIndexServer
          path: searchIndexServer
      - name: Download searchIndex build artifact
        uses: actions/download-artifact@v3
        with:
          name: searchIndex
          path: searchIndex
      - uses: superfly/flyctl-actions@1.3
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy"
